{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gowtham M\\\\my-react-app\\\\src\\\\sample.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Sample({\n  value,\n  min,\n  max\n}) {\n  _s();\n  const [count, setCount] = useState(0);\n  function handleIncr() {\n    if (count < max) {\n      setCount(count + 1);\n    }\n  }\n  function handleDecr() {\n    if (count > min) {\n      setCount(count - 1);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The value of count is \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: h,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Sample, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Sample;\nvar _c;\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Sample","value","min","max","_s","count","setCount","handleIncr","handleDecr","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","h","_c","$RefreshReg$"],"sources":["C:/Users/Gowtham M/my-react-app/src/sample.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function Sample({value,min,max}) {\r\n  const [count, setCount] = useState(0);\r\n\r\n  function handleIncr() {\r\n    if(count<max)\r\n        {\r\n            setCount(count+1);\r\n        }\r\n  }\r\n\r\n  function handleDecr(){\r\n    if(count>min)\r\n        {\r\n            setCount(count-1);\r\n        }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>The value of count is {count}</p>\r\n      <button onClick={h}>Click me</button>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,MAAMA,CAAC;EAACC,KAAK;EAACC,GAAG;EAACC;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAErC,SAASY,UAAUA,CAAA,EAAG;IACpB,IAAGF,KAAK,GAACF,GAAG,EACR;MACIG,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACrB;EACN;EAEA,SAASG,UAAUA,CAAA,EAAE;IACnB,IAAGH,KAAK,GAACH,GAAG,EACR;MACII,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACrB;EACN;EAEA,oBACER,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAG,wBAAsB,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpChB,OAAA;MAAQiB,OAAO,EAAEC,CAAE;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACrC,CAAC;AAEP;AAACT,EAAA,CAvBuBJ,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}