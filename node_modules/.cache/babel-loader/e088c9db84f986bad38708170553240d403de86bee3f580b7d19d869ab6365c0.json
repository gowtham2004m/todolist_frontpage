{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\my-react-app\\\\src\\\\MovieRating\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Card from \"./Card\";\nimport MOVIE_LIST from \"./MovieListData\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst arr = MOVIE_LIST.map(value => {\n  return value.genre;\n});\nconst options = Array.from(new Set(arr));\nexport default function MovieRating() {\n  _s();\n  const [input, setInput] = useState(options[0]);\n  const [average, setAverage] = useState(0);\n  function handleChange(e) {\n    // find average\n    let ratings = MOVIE_LIST.filter(value => value.genre === e.target.value).map(value => value.rating);\n    let total = ratings.reduce((prev, curr) => prev + curr);\n    let result = total / ratings.length;\n    setAverage(result);\n    setInput(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"total movies :  \", MOVIE_LIST.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The average rating is : \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: input,\n      onChange: handleChange,\n      children: options.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), MOVIE_LIST.filter(value => value.genre === input).map((movie, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        movie: movie\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true);\n}\n_s(MovieRating, \"BZTGrlzE+VbxW6cFschHTmn0ZBs=\");\n_c = MovieRating;\nvar _c;\n$RefreshReg$(_c, \"MovieRating\");","map":{"version":3,"names":["useState","Card","MOVIE_LIST","jsxDEV","_jsxDEV","Fragment","_Fragment","arr","map","value","genre","options","Array","from","Set","MovieRating","_s","input","setInput","average","setAverage","handleChange","e","ratings","filter","target","rating","total","reduce","prev","curr","result","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","movie","_c","$RefreshReg$"],"sources":["E:/projects/my-react-app/src/MovieRating/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport MOVIE_LIST from \"./MovieListData\";\r\n\r\nconst arr = MOVIE_LIST.map((value) => {\r\n    return value.genre;\r\n});\r\nconst options = Array.from(new Set(arr));\r\n\r\nexport default function MovieRating() {\r\n    const [input, setInput] = useState(options[0]);\r\n    const [average, setAverage] = useState(0);\r\n\r\n    function handleChange(e) {\r\n        // find average\r\n        let ratings = MOVIE_LIST.filter(value => value.genre === e.target.value).map(value => value.rating);\r\n        let total = ratings.reduce((prev, curr) => prev + curr);\r\n        let result = total / ratings.length;\r\n        setAverage(result);\r\n        setInput(e.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <h3>total movies :  {MOVIE_LIST.length}</h3>\r\n            <p>The average rating is : {average}</p>\r\n            <select value={input} onChange={handleChange}>\r\n                {\r\n                    options.map((value, index) => {\r\n                        return <option key={index} value={value}>{value}</option>;\r\n                    })\r\n                }\r\n            </select>\r\n\r\n            {\r\n                MOVIE_LIST.filter(value => value.genre === input).map((movie, index) => {\r\n                    return <Card movie={movie} key={index}></Card>;\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,GAAG,GAAGL,UAAU,CAACM,GAAG,CAAEC,KAAK,IAAK;EAClC,OAAOA,KAAK,CAACC,KAAK;AACtB,CAAC,CAAC;AACF,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACP,GAAG,CAAC,CAAC;AAExC,eAAe,SAASQ,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACW,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAEzC,SAASqB,YAAYA,CAACC,CAAC,EAAE;IACrB;IACA,IAAIC,OAAO,GAAGrB,UAAU,CAACsB,MAAM,CAACf,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAKY,CAAC,CAACG,MAAM,CAAChB,KAAK,CAAC,CAACD,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACiB,MAAM,CAAC;IACnG,IAAIC,KAAK,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,GAAGC,IAAI,CAAC;IACvD,IAAIC,MAAM,GAAGJ,KAAK,GAAGJ,OAAO,CAACS,MAAM;IACnCZ,UAAU,CAACW,MAAM,CAAC;IAClBb,QAAQ,CAACI,CAAC,CAACG,MAAM,CAAChB,KAAK,CAAC;EAC5B;EACA,oBACIL,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,GAAI,kBAAgB,EAAC/B,UAAU,CAAC8B,MAAM;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5CjC,OAAA;MAAA6B,QAAA,GAAG,0BAAwB,EAACd,OAAO;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCjC,OAAA;MAAQK,KAAK,EAAEQ,KAAM;MAACqB,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,EAErCtB,OAAO,CAACH,GAAG,CAAC,CAACC,KAAK,EAAE8B,KAAK,KAAK;QAC1B,oBAAOnC,OAAA;UAAoBK,KAAK,EAAEA,KAAM;UAAAwB,QAAA,EAAExB;QAAK,GAA3B8B,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAAC;MAC7D,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC,EAGLnC,UAAU,CAACsB,MAAM,CAACf,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAKO,KAAK,CAAC,CAACT,GAAG,CAAC,CAACgC,KAAK,EAAED,KAAK,KAAK;MACpE,oBAAOnC,OAAA,CAACH,IAAI;QAACuC,KAAK,EAAEA;MAAM,GAAMD,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAClD,CAAC,CAAC;EAAA,eAER,CAAC;AAEX;AAACrB,EAAA,CA/BuBD,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}